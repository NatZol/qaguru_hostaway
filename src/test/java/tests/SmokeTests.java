package tests;

import helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import com.github.javafaker.Faker;

import static com.codeborne.selenide.Condition.*;
import static com.codeborne.selenide.Selenide.open;
import static com.codeborne.selenide.Selenide.title;
import static com.codeborne.selenide.Selenide.*;
import static com.codeborne.selenide.CollectionCondition.size;
import static com.codeborne.selenide.WebDriverRunner.url;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.AssertionsForClassTypes.assertThat;


public class SmokeTests extends TestBase {

    Faker faker = new Faker();

    String name = faker.name().firstName(),
            email = faker.internet().emailAddress(),
            phoneNumber = faker.phoneNumber().subscriberNumber(9),
            listingsNumber = String.valueOf(faker.number().numberBetween(4, 9));

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/"));

        step("Page title should have text 'The Leading All-In-One Vacation Rental Management Software for Pros - Hostaway'", () -> {
            String expectedTitle = "The Leading All-In-One Vacation Rental Management Software for Pros - Hostaway";
            String actualTitle = title();

            assertThat(actualTitle).contains(expectedTitle);
        });
    }

    @Test
    @Description("Smoke test for Request demo page")
    @DisplayName("Request demo button should open request demo page")
    void requestDemoTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/")
        );

        step("Click Request demo button", () ->
                $$("nav#nav div[class*='Base'] a").findBy(text("Request a demo")).click()
        );

        step("Check demo form is displayed", () -> {
                    $("h1").shouldHave(text("Get In Touch Today"));
                    $("div#demo div[class*='Title']").shouldHave(text("REQUEST A FREE DEMO NOW"));
                    $$("div#demo input:not([type='hidden'])").shouldHave(size(4));
                    $("div#demo input[name='email']").shouldBe(visible);
                    $("div#demo input[name='name']").shouldBe(visible);
                    $("div#demo input[type='tel']").shouldBe(visible);
                    $("div#demo input[name='propertiesCount']").shouldBe(visible);
                    $("div#demo button[type='Submit']").shouldBe(visible);
                }
        );
    }

    @Test
    @Description("Smoke test for sending request for a demo")
    @DisplayName("User should be able to send a request for demo")
    void requestDemoApply() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/")
        );

        step("Click Request demo button", () ->
                $$("nav#nav div[class*='Base'] a").findBy(text("Request a demo")).click()
        );

        step("Fill in all data", () -> {
                    $("div#demo input[name='email']").setValue(email);
                    $("div#demo input[name='name']").setValue(name);
                    $("div#demo input[type='tel']").setValue(phoneNumber);
                    $("div#demo input[name='propertiesCount']").setValue(listingsNumber);
                    $("div#demo button[type='Submit']").click();
                }
        );

        step("Check Schedule demo page is opened", () -> {
                    $("h5#meeting-duration").shouldHave(text("Meeting duration"));
                }
        );

    }

    @Test
    @Description("Smoke test for Market Place")
    @DisplayName("Market Place button should open market place page")
    void marketPlaceTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/")
        );

        step("Go to Marketplace", () ->
                $$("nav#nav div[class*='MenuItem'] a").findBy(text("Marketplace")).click()
        );

        step("Check Marketplace is opened with all the app cards", () -> {
                    $("h1").shouldHave(text("Hostaway Marketplace"));
                    $$("div[class*='CardsContainer'] a[href*='marketplace']").shouldHave(size(103));
                }
        );
    }

    @Test
    @Description("Smoke test for sorting by category on Market Place page")
    @DisplayName("Sorting by category must work")
    void marketPlaceSortingTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/")
        );

        step("Go to Marketplace", () ->
                $$("nav#nav div[class*='MenuItem'] a").findBy(text("Marketplace")).click()
        );

        step("Choose category Booking Channel", () -> {
                    $("div[class*='SelectContainer'] input[id*='input']").setValue("Booking Channel");
                    $$("div[class*='menu'] div[class*='option']").findBy(text("Booking Channel")).click();
                }
        );

        step("Check cards are filtered", () -> {
                    $("div[class*='SelectContainer']").shouldHave(text("Booking Channel"));
                    $$("div[class*='CardsContainer'] a[href*='marketplace']").shouldHave(size(11));
                }
        );
    }

    @Test
    @Description("Smoke test for partner (Marketplace)")
    @DisplayName("Partner's card must be opened")
    void marketPlacePartnerTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/")
        );

        step("Go to Marketplace", () ->
                $$("nav#nav div[class*='MenuItem'] a").findBy(text("Marketplace")).click()
        );

        step("Open air-bnb page", () ->
                $("div[class*='CardsContainer'] a[href*='airbnb']").click()
        );

        step("Check air-bnb page is opened", () -> {
                    $("h1:not([class*='HeadingH1'])").shouldHave(text("Airbnb"));
                    String redirectUrl = $("a#partner-website-button").getAttribute("href");
                    String expectedRedirectUrl = "https://airbnb.com/?utm_source=hostaway";

                    assertThat(redirectUrl).contains(expectedRedirectUrl);
                }
        );
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://www.hostaway.com/'", () ->
                open("https://www.hostaway.com/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}
